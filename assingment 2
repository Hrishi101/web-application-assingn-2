flutter create makeup_app
cd makeup_app
// lib/screens/login_screen.dart
import 'package:flutter/material.dart';

class LoginScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Login'),
      ),
      body: Center(
        // Implement login UI here
      ),
    );
  }
}
// lib/main.dart
import 'package:flutter/material.dart';
import 'screens/login_screen.dart';
import 'screens/home_screen.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      initialRoute: '/login',
      routes: {
        '/login': (context) => LoginScreen(),
        '/home': (context) => HomeScreen(),
        // Add routes for other screens
      },
    );
  }
}
// lib/services/api_service.dart
import 'dart:convert';
import 'package:http/http.dart' as http;

class ApiService {
  static Future<List<dynamic>> fetchBrandData(String brandName) async {
    final response = await http.get('http://makeup-api.herokuapp.com/api/v1/products.json?brand=$brandName');
    if (response.statusCode == 200) {
      return json.decode(response.body);
    } else {
      throw Exception('Failed to load brand data');
    }
  }
}
// lib/screens/login_screen.dart
import 'package:flutter/material.dart';
import 'package:makeup_app/screens/home_screen.dart';

class LoginScreen extends StatelessWidget {
  // Hardcoded credentials
  final String hardcodedUsername = 'yourUsername';
  final String hardcodedPassword = 'yourPassword';

  // Controller for the username and password text fields
  final TextEditingController usernameController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Login'),
      ),
      body: Padding(
        padding: EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            TextField(
              controller: usernameController,
              decoration: InputDecoration(labelText: 'Username'),
            ),
            TextField(
              controller: passwordController,
              decoration: InputDecoration(labelText: 'Password'),
              obscureText: true,
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                if (usernameController.text == hardcodedUsername && passwordController.text == hardcodedPassword) {
                  Navigator.pushReplacementNamed(context, '/home');
                } else {
                  // Handle invalid credentials
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('Invalid credentials')),
                  );
                }
              },
              child: Text('Login'),
            ),
          ],
        ),
      ),
    );
  }
}
// lib/screens/brand_information_screen.dart
import 'package:flutter/material.dart';
import 'package:makeup_app/services/api_service.dart';

class BrandInformationScreen extends StatefulWidget {
  final String brandName;

  BrandInformationScreen({required this.brandName});

  @override
  _BrandInformationScreenState createState() => _BrandInformationScreenState();
}

class _BrandInformationScreenState extends State<BrandInformationScreen> {
  List<dynamic> brandData = [];

  @override
  void initState() {
    super.initState();
    fetchData();
  }

  Future<void> fetchData() async {
    try {
      List<dynamic> data = await ApiService.fetchBrandData(widget.brandName);
      setState(() {
        brandData = data;
      });
    } catch (e) {
      // Handle error
      print('Error fetching data: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('${widget.brandName} Information'),
      ),
      body: ListView.builder(
        itemCount: brandData.length,
        itemBuilder: (context, index) {
          // Build UI to display brand information
          return ListTile(
            title: Text(brandData[index]['productName']),
            // Add other fields as needed
          );
        },
      ),
    );
  }
}
